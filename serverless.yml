service: comino-document-retrieval
provider:
  name: aws
  runtime: nodejs12.x
  # vpc: ${self:custom.vpc.${opt:stage}}
  stage: ${opt:stage}
  region: eu-west-2
  timeout: 30
  # tracing:
  #   apiGateway: true
  #   lambda: true
  # usagePlan:
  #   - secureAccess:
  #       throttle:
  #         burstLimit: 200
  #         rateLimit: 100

custom:
  serverless-offline-ssm:
    stages:
      - offline

plugins:
  - serverless-offline-ssm
  - serverless-offline

package:
  individually: true
  exclude:
    - ./**

functions:
  comino-document-retrieval:
    name: comino-document-retrieval-${self:provider.stage}
    role: lambdaExecutionRole
    handler: comino-document-retrieval-${self:provider.stage}/api/index.handler
    package:
      include:
        - api/index.js
        - api/lib/**
        - api/node_modules/**
    events:
      - http:
          path: "{proxy+}"
          method: ANY

resources:
  Resources:
    lambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /${self:service}/${self:provider.stage}/
        RoleName: ${self:service}-lambdaExecutionRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
          - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
        Policies:
          - PolicyName: manageLogs
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:logs"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "log-group:/aws/lambda/*:*:*"
                - Effect: "Allow"
                  Action:
                    - "s3:PutObject"
                    - "s3:GetObject"
                  Resource:
                    Fn::Join:
                      - ""
                      - - "arn:aws:s3:::"
                        - "Ref": "ServerlessDeploymentBucket"
          - PolicyName: lambdaInvocation
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "lambda:InvokeFunction"
                  Resource: "*"
